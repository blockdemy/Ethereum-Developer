// SPDX-License-Identifier: GPL-3.0

pragma solidity ^0.8.0;


contract Funciones{

    address public sender = msg.sender;
    
    function setSender (uint parametro1, uint parametro2) external{
        parametro1 += parametro2;
        sender = msg.sender;
    } 

    function getSender() public view returns (address){
       return sender;
    }

    function validarSender() private{
        this.setSender(1,2);
        getSender();

    }

    function suma() public pure returns (uint){
        return 2+2;
    }

    uint x = 8;
    function incrementar() public view returns (uint){
        return x+2;
    }

    
    function incrementarPrecio()public{
        if (price > 10){
            price = price*5;


        }
    }


    modifier validarCambio(uint16 priceIn){
        
    require(priceIn > 10, "Precio no es mayor que 10"); 
    _;
    }

    uint16 price;
    function incrementarPrecio2() public validarCambio(price){
        price = price*5;
        emit cambio(msg.sender, price);


    }

    event cambio(address, uint16);

    

}

